一：分布式基本概念
    1.1 CAP
        C：Consistency 一致性  A：Availability 可用性  P：Partition tolerance 分区容错性

        CAP理论：
            一个分布式系统最多只能同时满足一致性（Consistency）、可用性（Availability）
            和分区容错性（Partition tolerance）这三项中的两项

            1）分区容错性：
                分区容错性指分布式系统在遇到某节点或网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务。但是此时
                如果要求强一致性的话，本来服务节点就网络不通，数据不能同步。那么此时如果不能进行数据同步的话，就会抛出异常，
                此时系统的可用性相对降低。而如果要求可用性，此时数据的一致性便不能保证，因此分区容错性下，只能进行相对的可用
                与一致。
                简单说：在网络中断，消息丢失的情况下，系统如果还能正常工作，就是有比较好的分区容错性。

                对一个大型分布式项目来说，分区容错性是最基础的，因为会面临复杂的网络问题。在此基础上考虑一致性和可用性


二：分布式事务
    分布式事务是指在分布式系统下跨库的事务操作。

    2.1：分布式事务解决方案
        2PC、TCC、可靠消息最终一致性、最大努力通知等

    2.1.1: 2PC详解（https://blog.csdn.net/u010046908/article/details/103975949）
        2PC即两阶段提交协议，是将整个事务流程分为两个阶段，准备阶段（Prepare phase）、提交阶段
        （commit phase），2是指两阶段，P是指准备阶段，C是提交阶段。
        ，事务管理器负责决策整个分布式事务的提交和回滚，事务参与者负责自己本地事务的提交和回滚。
        在计算机中部分关系数据库如Oracle、MySQL支持两阶段提交协议，如下图 ：

        准备阶段（Prepare phase）：
            事务管理器给每个参与者发送Prepare消息，每个数据库参与者在本地执行
            事务，并写本地的Undo/Redo日志，此时事务没有提交。（Undo日志是记录修改前的数据，用于数据库回滚，
            Redo日志是记录修改后的数据，用于提交事务后写入数据文件）

        提交阶段（commit phase）：
            如果事务管理器收到两参与者的执行失败或者超时消息时，直接给每个参与者发送回滚（Rollback）消息；否则，
            发送提交（Commit）消息；参与者根据事务管理器的指令执行提交或者回滚操作，并释放事务处理过程中使用的锁
            资源。注意 ：必须在最后阶段释放锁资源。

