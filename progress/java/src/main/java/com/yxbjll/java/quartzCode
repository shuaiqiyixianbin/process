一：简单job实现：

    /**
     * 任务类
     */
    public static class simpleJob implements Job{

        @Override
        public void execute(JobExecutionContext jobExecutionContext) throws JobExecutionException {
            Date date = new Date();
            SimpleDateFormat sf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            PrintLog.info("现在的时间是："+ sf.format(date));
            //具体的业务逻辑
            PrintLog.info("开始生成任务报表 或 开始发送邮件");
        }
    }
    /**
     * 任务触发类
     */
    public static class cronScheduler {
        public static void main(String[] args) throws SchedulerException, InterruptedException {
            //jobDetail
            JobDetail jobDetail = JobBuilder.newJob(simpleJob.class).withIdentity("cronJob").build();
            //cronTrigger
            //每日的9点40触发任务
            CronTrigger cronTrigger = TriggerBuilder.newTrigger().withIdentity("cronTrigger").withSchedule(CronScheduleBuilder.cronSchedule("0 35 16 * * ? ")).build();
            //1.每日10点15分触发      0 15 10 ？* *
            //2.每天下午的2点到2点59分（正点开始，隔5分触发）       0 0/5 14 * * ?
            //3.从周一到周五每天的上午10点15触发      0 15 10 ? MON-FRI
            //4.每月的第三周的星期五上午10点15触发     0 15 10 ? * 6#3
            //5.2016到2017年每月最后一周的星期五的10点15分触发   0 15 10 ? * 6L 2016-2017
            //Scheduler实例
            StdSchedulerFactory stdSchedulerFactory = new StdSchedulerFactory();
            Scheduler scheduler = stdSchedulerFactory.getScheduler();
            scheduler.start();
            scheduler.scheduleJob(jobDetail,cronTrigger);
        }
}