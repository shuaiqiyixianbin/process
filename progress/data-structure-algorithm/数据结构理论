导论：什么是数据结构：指的是一种外在的数据展示的形式。算法：计算的方法，可以理解为完成某一个过程中的执行思路。

一：基本概念
    1.数据结构：对数据的一种存储和组织方式，相互之间存在一种或者多种特定关系的数据的集合。数据就是存储的
    有用的信息 数据元素：数据的基本单位，又称节点、元素

    2.数据整体结构：逻辑结构、存储结构、运算 三者构成数据完整结构
二：数据结构分类：

    根据逻辑结构：
    1.线性结构：表中各个节点具有线性关系：有一个开始节点和一个终端节点，所有节点做多只有一个直接前驱节点
    和一个直接后继节点，如：栈、队列、串等都是线性结构线性表：有且仅有一个开始节点，有且仅有一个直接后驱
    结点，有且只有一个终结结点，顺序存储的线性表叫做顺序表，链式存储的叫做链表

    2.非线性结构：各个节点之间具有多个对应关系：一个节点与多个直接前驱节点和直接后继节点：如数组、树结构
    数组多行多列，所以显示出非线性结构

    根据存储方式：
    1.顺序存储：就是在一块连续的存储区域一个接一个的存放数据，顺序存储方式把逻辑上相邻的节点存储在物理位置上相邻的存储单元里
      ，节点间的逻辑关系由存储单元的邻接关系体现。也叫作顺序存储结构，一般采用数组或者结构数组来描述。
    2.链式存储：不要求逻辑上相邻的节点在物理位置上相邻，节点间的逻辑关系由附加的引用字段表示，一个节点的引用字段指向下一个节
      点的存放位置，一般在原数据项中增加引用类型（地址）来表示节点间的位置关系
    3.索引存储：采用附加的索引表的方式来存储结点信息。索引表由索引项组成，一般形式为：（关键字、地址），关键字是能够标识一个
      结点的数据项。（set采用hash算法直接根据关键字算出存储地址，因此要重写hashcode方法）
    *稠密索引：每个结点在索引表中都有一个索引项，索引项的地址指示结点所在的存储位置
    *稀疏索引：一组结点在索引表中只对应一个索引项，索引项的地址指示一组结点的起始存储位置
    4.散列存储：根据结点的关键字直接计算出该结点的存储地址的一种存储方式（hash表）

三：常用的数据结构

    1.数组（Array）：是一种聚合数据类型，最基本的数据结构。可以有一维、二维以及多维等表现形式（顺序存储）
    2.栈（Stack）:是一种特殊的线性表，遵循先进后出的原则，即只能从顶点进入和删除，用于重要数据现场保护
    3.队列：（Queue）:特殊的线性表，只能在队头删除，队尾插入 操作
    4.链表（Linked List）:按照链式存储结构进行存储，在物理上存在非连续的特点。链表结构中数据元素的逻辑顺序通过链表中的引用
      链接次序来实现.由一系列数据结点构成。每个数据结点又包含有数据域和引用域两部分。引用域保存了下一个元素保存的地址。
    5.树（Tree）:典型非线性结构。
    6.堆（Heap）:特殊的树形结构，二叉堆，特点是根节点的值要么是最大要么是最小，并且根节点的两个字数也是堆结构
    7.散列表（Hash）：根据关键字T f(T)算出具体位置

四：顺序表结构
    由于顺序表是一次存放的，只要知道了该顺序表的首地址以及每个数据元素所占用的存储长度，很容易计算出任何
    一个数据元素的位置（一般性，如果所有结点的类型相同，则每个结点所占用的存储空间大小也相同）
    顺序表具体实现：顺序表操作是基于数组实现，增删改查都是在数组上实现的，因为数组是可以看做是最基本的数
    据结构

五：链表结构
    分为数据部分以及地址部分。数据部分保存实际数据，而地址部分保存的是下一个结点的地址，缺点：浪费存储空
    间，因为需要保存额外的引用，其次对于链表的访问只能从表头逐个查找，然后一个个往下找，不能像顺序表一样
    随机访问,链表有单链表、双向链表、单循环链表等
    链表具体表现形式：在类中用类的属性表示，用含有一个nextNode引用用来指向下一个元素，如：一个Node节点里
    面存储了一个对象，Flow(含有字段id,num)，而Node{id,Flow(id,num)}就是这种格式

六：栈
    只能在栈顶操作数据，按照“后进先出”的原则处理节点数据

七：队列
    和栈的定义大体一致，只是运算规则有点不同，队列满足先进先出（FIFO），入队列是把数据加到最后一个结点，
    出队列就是取出第一个数据，并且进行删除操作，数据展现形式也是基于数组

八：树
    1.树形用于描述线性结构所不能实现的结构，比如数据簇，以及多个后继结点等数据形式

    类型：
    二叉树：每个结点最多只有两个子结点，因为有左右之分，因此是有序树
    满二叉树：除了最下面一层外，其他的都有两个结点
    完全二叉树：除了最下面一层外，其他每个结点都有两个结点，并且最后一个结点按照从左到右的顺序连续存在
    存储方式：也有顺序存储以及链式存储，并且顺序存储也是基于数组实现，而链式存储也是采用引用，但是有两个引用，一个是左结点引用，一个是右
    结点引用。建议采用链式存储
    一般的数据结构都有顺序存储以及链式存储两种存储形式